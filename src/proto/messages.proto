syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.cs739.messages";
option java_outer_classname = "MessagesProto";

package messages;

// endpoints for the NFS server
service NFS {
    rpc Mount  (MountRequest)  returns (FileHandleReply) {}
    rpc Lookup (LocalDirectoryRequest) returns (FileHandleReply) {}

    rpc Read   (ReadRequest)   returns (ReadReply) {}
    rpc Write  (WriteRequest)  returns (StatusReply) {}
    rpc Commit (CommitRequest) returns (StatusReply) {}

    rpc Create (LocalDirectoryRequest) returns (FileHandleReply) {}
    rpc Remove (LocalDirectoryRequest) returns (StatusReply) {}

    rpc Mkdir  (LocalDirectoryRequest)  returns (FileHandleReply) {}
    rpc Rmdir  (LocalDirectoryRequest)  returns (StatusReply) {}
}

message FileHandle {
	string path = 1;
	int64 version = 2;
}

message MountRequest {
  string rootDirectory = 1;
}

message ReadRequest {
  FileHandle fileHandle = 1;
  int64 offset = 2;
  int64 size = 3;
}

message ReadReply {
  bytes data = 1;
  int64 size = 2;
}

message WriteRequest {
  FileHandle fileHandle = 1;
  int64 offset = 2;
  int64 size = 3;
  bytes data = 4;
  //TODO (arman): do we need to send a clientID of some sort?
}

message CommitRequest {
  FileHandle fileHandle = 1;
}

// common requests

message LocalDirectoryRequest {
  FileHandle directoryFileHandle = 1; //directory in which the file/directory will exist in
  string name = 2; //file/directory we are looking for
}

// common replies

message FileHandleReply {
  FileHandle fileHandle = 1; //null if file does not exist
}

message StatusReply {
  bool success = 1;
  int64 serverSessionID = 2;
}
